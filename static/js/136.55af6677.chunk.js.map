{"version":3,"file":"static/js/136.55af6677.chunk.js","mappings":"+PAAaA,EAAU,SAAHC,GASb,IAADC,EAAAD,EARJE,MACEC,EAAKF,EAALE,MACAC,EAAQH,EAARG,SAAQC,EAAAJ,EACRK,OAAAA,OAAM,IAAAD,EAAG,GAAEA,EACXE,EAAYN,EAAZM,aACAC,EAAUP,EAAVO,WACAC,EAAWR,EAAXQ,YAIF,OACEC,EAAAA,EAAAA,MAAA,QAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAA,OAAAD,UACEC,EAAAA,EAAAA,KAAA,OACEC,IAAG,kCAAAC,OAAoCL,GACvCM,IAAI,oBAGRL,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAAD,SAAKR,KACLO,EAAAA,EAAAA,MAAA,KAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAA,KAAAD,SAAG,cAAa,IAAEP,MAEpBQ,EAAAA,EAAAA,KAAA,MAAAD,SAAI,YACJC,EAAAA,EAAAA,KAAA,MAAAD,SACGL,EAAOU,KAAI,SAAAC,GAAE,OACZL,EAAAA,EAAAA,KAAA,MAAAD,SAAiBM,EAAGC,MAAXD,EAAGE,GAAkB,OAGlCT,EAAAA,EAAAA,MAAA,KAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAA,KAAAD,SAAG,aACFJ,EAAa,MAAEK,EAAAA,EAAAA,KAAA,KAAAD,SAAG,kBAClBH,EAAY,YAKvB,EClCe,SAASY,IACtB,IAAAC,GAA8BC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAnCI,EAAOF,EAAA,GAAEG,EAAUH,EAAA,GAC1BI,GAAkCL,EAAAA,EAAAA,WAAS,GAAMM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAA1CE,EAASD,EAAA,GAAEE,EAAYF,EAAA,GAC9BG,GAA0BT,EAAAA,EAAAA,UAAS,MAAKU,GAAAR,EAAAA,EAAAA,GAAAO,EAAA,GAAjCE,EAAKD,EAAA,GAAEE,EAAQF,EAAA,GACdG,GAAYC,EAAAA,EAAAA,MAAZD,QAmBR,OAlBAE,QAAQC,IAAIH,IAEZI,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAY,eAAAxC,GAAAyC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,IAAA,IAAAC,EAAA,OAAAF,IAAAA,MAAA,SAAAG,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAGF,OAHEF,EAAAC,KAAA,EAEjBhB,GAAa,GACbI,EAAS,MAAMW,EAAAE,KAAA,GACOC,EAAAA,EAAAA,GAAeC,OAAOd,IAAU,KAAD,EAA/CV,EAAOoB,EAAAK,KACbb,QAAQC,IAAIb,GACZC,EAAWD,GAASoB,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAM,GAAAN,EAAA,SAEpBX,EAAQW,EAAAM,IAAQ,QAEI,OAFJN,EAAAC,KAAA,GAEhBhB,GAAa,GAAOe,EAAAO,OAAA,6BAAAP,EAAAQ,OAAA,GAAAV,EAAA,yBAEvB,kBAZiB,OAAA3C,EAAAsD,MAAA,KAAAC,UAAA,KAalBf,GACF,GAAG,CAACL,KAEFzB,EAAAA,EAAAA,MAAA,QAAAC,SAAA,CACGc,IAAWb,EAAAA,EAAAA,KAACb,EAAO,CAACG,MAAOuB,IAC3BI,IAAajB,EAAAA,EAAAA,KAAA,OAAAD,SAAK,eAClBsB,IACCvB,EAAAA,EAAAA,MAAA,OAAAC,SAAA,CAAK,0BACqBsB,EAAMuB,QAAQ,iCAI1C5C,EAAAA,EAAAA,KAAC6C,EAAAA,SAAQ,CAACC,UAAU9C,EAAAA,EAAAA,KAAA,OAAAD,SAAK,eAAiBA,UACxCC,EAAAA,EAAAA,KAAC+C,EAAAA,GAAM,QAIf,C,qHCzCMC,EAAU,mCAChBC,EAAAA,EAAAA,SAAAA,QAAyB,+BAElB,IAAMC,EAAgB,eAAA9D,GAAAyC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,IAAA,IAAAoB,EAAA,OAAArB,IAAAA,MAAA,SAAAG,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACPc,EAAAA,EAAAA,IAAU,+BAAD/C,OAAgC8C,IAAW,KAAD,EAA5D,OAARG,EAAQlB,EAAAK,KAAAL,EAAAmB,OAAA,SACPD,EAASE,MAAI,wBAAApB,EAAAQ,OAAA,GAAAV,EAAA,KACrB,kBAH4B,OAAA3C,EAAAsD,MAAA,KAAAC,UAAA,KAKhBP,EAAc,eAAAkB,GAAAzB,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAyB,EAAOhC,GAAO,IAAA4B,EAAA,OAAArB,IAAAA,MAAA,SAAA0B,GAAA,cAAAA,EAAAtB,KAAAsB,EAAArB,MAAA,cAAAqB,EAAArB,KAAA,EACjBc,EAAAA,EAAAA,IAAU,UAAD/C,OAAWqB,EAAO,aAAArB,OAAY8C,IAAW,KAAD,EAA1D,OAARG,EAAQK,EAAAlB,KAAAkB,EAAAJ,OAAA,SACPD,EAASE,MAAI,wBAAAG,EAAAf,OAAA,GAAAc,EAAA,KACrB,gBAHwBE,GAAA,OAAAH,EAAAZ,MAAA,KAAAC,UAAA,I","sources":["components/Details/Details.jsx","pages/MovieDetails.jsx","services/api.js"],"sourcesContent":["export const Details = ({\n  movie: {\n    title,\n    overview,\n    genres = [],\n    vote_average,\n    vote_count,\n    poster_path,\n  },\n}) => {\n  \n  return (\n    <main>\n      <div>\n        <img\n          src={`https://image.tmdb.org/t/p/w300${poster_path}`}\n          alt='Movie poster'\n        />\n      </div>\n      <div>\n        <h1>{title}</h1>\n        <p>\n          <b>Overview:</b> {overview}\n        </p>\n        <h3>Genres</h3>\n        <ul>\n          {genres.map(el => (\n            <li key={el.id}>{el.name}</li>\n          ))}\n        </ul>\n        <p>\n          <b>Rating: </b>\n          {vote_average}. <b>Total votes: </b>\n          {vote_count}{' '}\n        </p>\n      </div>\n    </main>\n  );\n};\n","import { Suspense, useEffect, useState } from 'react';\nimport { Outlet, useParams } from 'react-router-dom';\nimport { getFilmDetails } from '../services/api';\nimport { Details } from '../components/Details/Details';\nexport default function MovieDetails() {\n  const [details, setDetails] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const { movieId } = useParams();\n  console.log(movieId);\n\n  useEffect(() => {\n    const fetchDetails = async () => {\n      try {\n        setIsLoading(true);\n        setError(null);\n        const details = await getFilmDetails(Number(movieId));\n        console.log(details);\n        setDetails(details);\n      } catch (error) {\n        setError(error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchDetails();\n  }, [movieId]);\n  return (\n    <main>\n      {details && <Details movie={details} />}\n      {isLoading && <div>LOADING...</div>}\n      {error && (\n        <div>\n          Something went wrong.. {error.message}. Please, reload the page!\n        </div>\n      )}\n\n      <Suspense fallback={<div>LOADING...</div>}>\n        <Outlet />\n      </Suspense>\n    </main>\n  );\n}\n","import axios from 'axios';\nconst api_key = 'f6d968bc9808c07e077eb94ac6b79371';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport const getTrendingFilms = async () => {\n  const response = await axios.get(`/trending/movie/day?api_key=${api_key}`);\n  return response.data;\n};\n\nexport const getFilmDetails = async (movieId) => {\n    const response = await axios.get(`/movie/${movieId}?api_key=${api_key}`);\n    return response.data;\n  };\n"],"names":["Details","_ref","_ref$movie","movie","title","overview","_ref$movie$genres","genres","vote_average","vote_count","poster_path","_jsxs","children","_jsx","src","concat","alt","map","el","name","id","MovieDetails","_useState","useState","_useState2","_slicedToArray","details","setDetails","_useState3","_useState4","isLoading","setIsLoading","_useState5","_useState6","error","setError","movieId","useParams","console","log","useEffect","fetchDetails","_asyncToGenerator","_regeneratorRuntime","_callee","_details","_context","prev","next","getFilmDetails","Number","sent","t0","finish","stop","apply","arguments","message","Suspense","fallback","Outlet","api_key","axios","getTrendingFilms","response","abrupt","data","_ref2","_callee2","_context2","_x"],"sourceRoot":""}