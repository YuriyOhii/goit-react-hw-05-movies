{"version":3,"file":"static/js/149.6987020d.chunk.js","mappings":"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","sources":["components/Movie/Movie.styled.js","components/Movie/Movie.jsx","components/MovieList/MovieList.styled.js","components/MovieList/MovieList.jsx","components/SearchForm/SearchForm.jsx","pages/Movies.jsx","services/api.js"],"sourcesContent":["import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const Card = styled.div`\n  border-radius: 2px;\n  overflow: hidden;\n  padding-top: ${({ theme }) => theme.spacing(4)};\n`;\n\nexport const Title = styled.p`\n  text-align: center;\n  font-size: 20px;\n  padding: ${({ theme }) => theme.spacing(1)};\n  transition: font-size 300ms;\n`;\n\nexport const Reference = styled(Link)`\n  text-decoration: none;\n  color: ${({ theme }) => theme.colors.grey};\n  transition: color 300ms;\n  &:hover,\n  &:focus {\n    color: ${({ theme }) => theme.colors.red};\n  }\n`;\n\nexport const Wrap = styled.div`\n  text-align: center;\n  transition: transform 300ms;\n  &:hover,\n  &:focus {\n    transform: scale(1.02);\n  }\n`;\n","import { useLocation } from 'react-router-dom';\nimport { Card, Reference, Title, Wrap } from './Movie.styled';\nexport const Movie = ({ film: { title, id, poster_path } }) => {\n  const location = useLocation();\n  const defaultImg = 'https://via.placeholder.com/200x300';\n\n  return (\n    <div>\n      <Reference to={`/movies/${id}`} state={{ from: location }}>\n        <Card>\n          <Wrap>\n            <img\n              src={\n                poster_path\n                  ? `https://image.tmdb.org/t/p/w200${poster_path}`\n                  : defaultImg\n              }\n              alt=\"Movie poster\"\n            />\n          </Wrap>\n          <Title>{title}</Title>\n        </Card>\n      </Reference>\n    </div>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Query = styled.span`\n  text-transform: capitalize;\n  color: ${({ theme }) => theme.colors.red};\n  font-size: 24px;\n`;\n\nexport const MovieItem = styled.li`\n  list-style: none;\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\n`;\n\nexport const List = styled.ul`\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(220px, 1fr));\n  grid-gap: ${({ theme }) => theme.spacing(2)};\n`;\n","import { useLocation, useSearchParams } from 'react-router-dom';\nimport { Movie } from '../Movie/Movie';\nimport { useEffect, useState } from 'react';\nimport { searchMovies, getTrendingFilms } from '../../services/api';\nimport { List, MovieItem, Query } from './MovieList.styled';\n\nexport const MovieList = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [params] = useSearchParams();\n  const [movies, setMovies] = useState([]);\n  const query = params.get('query') ?? '';\n  const location = useLocation();\n  console.log(location);\n\n  useEffect(() => {\n    const fetchFilmList = async () => {\n      try {\n        if (query === '' && location.pathname !== '/') return;\n        let films = [];\n        setIsLoading(true);\n        setError(null);\n        if (location.pathname === '/') {\n          films = await getTrendingFilms();\n        } else {\n          films = await searchMovies(query);\n        }\n        setMovies(films.results);\n      } catch (error) {\n        setError(error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchFilmList();\n  }, [query, location]);\n  return (\n    <section>\n      {movies.length > 0 ? (\n        location.pathname === '/' ? (\n          <h1>The most trending films of the day!</h1>\n        ) : (\n          <h1>\n            Here we are! Films for your request: <Query>{query}</Query>\n          </h1>\n        )\n      ) : null}\n      <List>\n        {movies.map(el => (\n          <MovieItem key={el.id}>\n            <Movie film={el} />\n          </MovieItem>\n        ))}\n      </List>\n      {isLoading && <div>LOADING...</div>}\n      {error && (\n        <div>\n          Something went wrong.. {error.message}. Please, reload the page!\n        </div>\n      )}\n    </section>\n  );\n};\n","import PropTypes from 'prop-types'\n\nimport { HiOutlineSearch } from 'react-icons/hi'\nexport const SearchForm = ({onSubmit}) => {\n\nconst handleSubmit = e => {\n    e.preventDefault();\n    const query = e.target.elements.query.value;\n    onSubmit(query);\n   e.target.reset();\n}\n\n    return (\n        <form onSubmit={handleSubmit}>\n            <input type=\"text\" name=\"query\" />\n            <button type=\"submit\"><HiOutlineSearch/></button>\n        </form>\n    )\n};\n\nSearchForm.propTypes = {\n    onSubmit: PropTypes.func.isRequired,\n}","import { MovieList } from 'components/MovieList/MovieList';\nimport { SearchForm } from 'components/SearchForm/SearchForm';\nimport { useSearchParams } from 'react-router-dom';\n\nexport default function Movies() {\n  const [params, setParams] = useSearchParams();\n\n  const getQuery = value => {\n    const normalizedQuery = value.toLowerCase().trim();\n    params.set('query', normalizedQuery);\n    setParams(params);\n  };\n\n  return (\n    <main>\n      <SearchForm onSubmit={getQuery} />\n      <MovieList />\n    </main>\n  );\n}\n","import axios from 'axios';\nconst api_key = 'f6d968bc9808c07e077eb94ac6b79371';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport const getTrendingFilms = async () => {\n  const response = await axios.get(`/trending/movie/day?api_key=${api_key}`);\n  return response.data;\n};\n\nexport const getMovieDetails = async movieId => {\n  const response = await axios.get(`/movie/${movieId}?api_key=${api_key}`);\n  return response.data;\n};\n\nexport const searchMovies = async query => {\n  const response = await axios.get(\n    `/search/movie?query=${query}&api_key=${api_key}`\n  );\n  return response.data;\n};\n\nexport const searchMovieCast = async movieId => {\n  const response = await axios.get(\n    `/movie/${movieId}/credits?api_key=${api_key}`\n  );\n  return response.data;\n};\n\nexport const searchMovieReviews = async movieId => {\n  const response = await axios.get(\n    `/movie/${movieId}/reviews?api_key=${api_key}`\n  );\n  return response.data;\n};\n"],"names":["Card","styled","_templateObject","_taggedTemplateLiteral","_ref","theme","spacing","Title","_templateObject2","_ref2","Reference","Link","_templateObject3","_ref3","colors","grey","_ref4","red","Wrap","_templateObject4","Movie","_ref$film","film","title","id","poster_path","location","useLocation","_jsx","children","to","concat","state","from","_jsxs","src","alt","Query","MovieItem","List","MovieList","_params$get","_useState","useState","_useState2","_slicedToArray","isLoading","setIsLoading","_useState3","_useState4","error","setError","_useSearchParams","useSearchParams","params","_useState5","_useState6","movies","setMovies","query","get","console","log","useEffect","fetchFilmList","_asyncToGenerator","_regeneratorRuntime","_callee","films","_context","prev","next","pathname","abrupt","getTrendingFilms","sent","searchMovies","results","t0","finish","stop","apply","arguments","length","map","el","message","SearchForm","onSubmit","e","preventDefault","target","elements","value","reset","type","name","HiOutlineSearch","Movies","_useSearchParams2","setParams","normalizedQuery","toLowerCase","trim","set","api_key","axios","response","data","getMovieDetails","_callee2","movieId","_context2","_x","_callee3","_context3","_x2","searchMovieCast","_callee4","_context4","_x3","searchMovieReviews","_ref5","_callee5","_context5","_x4"],"sourceRoot":""}