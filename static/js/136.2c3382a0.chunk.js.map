{"version":3,"file":"static/js/136.2c3382a0.chunk.js","mappings":"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","sources":["components/Details/Details.jsx","pages/MovieDetails.jsx","services/api.js"],"sourcesContent":["export const Details = ({\n  movie: {\n    title,\n    overview,\n    genres = [],\n    vote_average,\n    vote_count,\n    poster_path,\n  },\n}) => {\n  const defaultImg = 'https://via.placeholder.com/300x450';\n\n  return (\n    <main>\n      <div>\n        <img\n          src={\n            poster_path\n              ? `https://image.tmdb.org/t/p/w300${poster_path}`\n              : defaultImg\n          }\n          alt=\"Movie poster\"\n        />\n      </div>\n      <div>\n        <h1>{title}</h1>\n        <p>\n          <b>Overview:</b> {overview}\n        </p>\n        <h3>Genres</h3>\n        <ul>\n          {genres.map(el => (\n            <li key={el.id}>{el.name}</li>\n          ))}\n        </ul>\n        <p>\n          <b>Rating: </b>\n          {vote_average}. <b>Total votes: </b>\n          {vote_count}{' '}\n        </p>\n      </div>\n    </main>\n  );\n};\n","import { Suspense, useEffect, useState } from 'react';\nimport { Link, Outlet, useLocation, useParams } from 'react-router-dom';\nimport { getMovieDetails } from '../services/api';\nimport { Details } from '../components/Details/Details';\nexport default function MovieDetails() {\n  const [details, setDetails] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const { movieId } = useParams();\n  const location = useLocation();\n  const backLink = location.state?.from ?? '/';\n\n  useEffect(() => {\n    const fetchDetails = async () => {\n      try {\n        setIsLoading(true);\n        setError(null);\n        const details = await getMovieDetails(Number(movieId));\n        setDetails(details);\n      } catch (error) {\n        setError(error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchDetails();\n  }, [movieId]);\n  return (\n    <main>\n      <Link to={backLink}>Back to FilmList</Link>\n      {details && <Details movie={details} />}\n      {isLoading && <div>LOADING...</div>}\n      {error && (\n        <div>\n          Something went wrong.. {error.message}. Please, reload the page!\n        </div>\n      )}\n      <section>\n        <ul>\n          <li>\n            <Link to={`/movies/${movieId}/cast`}>Cast</Link>\n          </li>\n          <li>\n            <Link to={`/movies/${movieId}/reviews`}>Reviews</Link>\n          </li>\n        </ul>\n      </section>\n      <Suspense fallback={<div>LOADING...</div>}>\n        <Outlet />\n      </Suspense>\n    </main>\n  );\n}\n","import axios from 'axios';\nconst api_key = 'f6d968bc9808c07e077eb94ac6b79371';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport const getTrendingFilms = async () => {\n  const response = await axios.get(`/trending/movie/day?api_key=${api_key}`);\n  return response.data;\n};\n\nexport const getMovieDetails = async movieId => {\n  const response = await axios.get(`/movie/${movieId}?api_key=${api_key}`);\n  return response.data;\n};\n\nexport const searchMovies = async query => {\n  const response = await axios.get(\n    `/search/movie?query=${query}&api_key=${api_key}`\n  );\n  return response.data;\n};\n\nexport const searchMovieCast = async movieId => {\n  const response = await axios.get(\n    `/movie/${movieId}/credits?api_key=${api_key}`\n  );\n  return response.data;\n};\n\nexport const searchMovieReviews = async movieId => {\n  const response = await axios.get(\n    `/movie/${movieId}/reviews?api_key=${api_key}`\n  );\n  return response.data;\n};\n"],"names":["Details","_ref","_ref$movie","movie","title","overview","_ref$movie$genres","genres","vote_average","vote_count","poster_path","_jsxs","children","_jsx","src","concat","alt","map","el","name","id","MovieDetails","_location$state$from","_location$state","_useState","useState","_useState2","_slicedToArray","details","setDetails","_useState3","_useState4","isLoading","setIsLoading","_useState5","_useState6","error","setError","movieId","useParams","backLink","useLocation","state","from","useEffect","fetchDetails","_asyncToGenerator","_regeneratorRuntime","_callee","_details","_context","prev","next","getMovieDetails","Number","sent","t0","finish","stop","apply","arguments","Link","to","message","Suspense","fallback","Outlet","api_key","axios","getTrendingFilms","response","abrupt","data","_ref2","_callee2","_context2","_x","searchMovies","_ref3","_callee3","query","_context3","_x2","searchMovieCast","_ref4","_callee4","_context4","_x3","searchMovieReviews","_ref5","_callee5","_context5","_x4"],"sourceRoot":""}