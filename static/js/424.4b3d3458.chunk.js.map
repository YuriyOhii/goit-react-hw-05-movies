{"version":3,"file":"static/js/424.4b3d3458.chunk.js","mappings":"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","sources":["components/CastMember/CastMember.styled.js","components/CastMember/CastMember.jsx","components/Cast/Cast.styled.js","components/Cast/Cast.jsx","services/api.js"],"sourcesContent":["import styled from 'styled-components';\nexport const Card = styled.div`\n  border-radius: 2px;\n  overflow: hidden;\n  padding-top: ${({ theme }) => theme.spacing(4)};\n`;\n\nexport const Text = styled.p`\n  text-align: center;\n  font-size: 18px;\n  padding: ${({ theme }) => theme.spacing(1)};\n  transition: font-size 300ms;\n`;\n\nexport const Wrap = styled.div`\n  text-align: center;\n  transition: transform 300ms;\n`;\n","import PropTypes from 'prop-types';\nimport { Card, Text, Wrap } from './CastMember.styled';\nexport const CastMember = ({ one: { character, name, profile_path } }) => {\n  const defaultImg = 'https://via.placeholder.com/200x300';\n  return (\n    <Card>\n      <Wrap>\n        <img\n          src={\n            profile_path\n              ? `https://image.tmdb.org/t/p/w200${profile_path}`\n              : defaultImg\n          }\n          alt=\"Cast member poster. If we have it :)\"\n        />\n      </Wrap>\n      <Text>\n        <b>{character}</b>\n      </Text>\n      <Text>{name}</Text>\n    </Card>\n  );\n};\n\nCastMember.propTypes = {\n  one: PropTypes.shape({\n    character: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    profile_path: PropTypes.string,\n  }),\n};\n","import styled from 'styled-components';\n\nexport const CastCard = styled.li`\n  list-style: none;\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\n`;\n\nexport const List = styled.ul`\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(220px, 1fr));\n  grid-gap: ${({ theme }) => theme.spacing(2)};\n`;\n\nexport const Title = styled.h2`\n  border-top: 2px solid ${({ theme }) => theme.colors.grey};\n  text-align: center;\n  font-size: 32px;\n`;\n","import { CastMember } from 'components/CastMember/CastMember';\nimport { searchMovieCast } from '../../services/api';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { CastCard, List, Title } from './Cast.styled';\nimport { Loader } from 'components/Loader/Loader';\n\nexport default function Cast() {\n  const { movieId } = useParams();\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [cast, setCast] = useState([]);\n\n  useEffect(() => {\n    const fetchDetails = async () => {\n      try {\n        setIsLoading(true);\n        setError(null);\n        const details = await searchMovieCast(Number(movieId));\n        setCast(details.cast);\n      } catch (error) {\n        setError(error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchDetails();\n  }, [movieId]);\n\n  return (\n    <section>\n      <Title>Movie participaters</Title>\n      {cast.length > 0 && (\n        <>\n          <h3>Cast</h3>\n          <List>\n            {cast.map(member => (\n              <CastCard key={member.credit_id}>\n                <CastMember one={member} />\n              </CastCard>\n            ))}\n          </List>\n        </>\n      )}\n      {isLoading && <Loader />}\n      {error && (\n        <div>\n          Something went wrong.. {error.message}. Please, reload the page!\n        </div>\n      )}\n    </section>\n  );\n}\n","import axios from 'axios';\nconst api_key = 'f6d968bc9808c07e077eb94ac6b79371';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport const getTrendingFilms = async () => {\n  const response = await axios.get(`/trending/movie/day?api_key=${api_key}`);\n  return response.data;\n};\n\nexport const getMovieDetails = async movieId => {\n  const response = await axios.get(`/movie/${movieId}?api_key=${api_key}`);\n  return response.data;\n};\n\nexport const searchMovies = async query => {\n  const response = await axios.get(\n    `/search/movie?query=${query}&api_key=${api_key}`\n  );\n  return response.data;\n};\n\nexport const searchMovieCast = async movieId => {\n  const response = await axios.get(\n    `/movie/${movieId}/credits?api_key=${api_key}`\n  );\n  return response.data;\n};\n\nexport const searchMovieReviews = async movieId => {\n  const response = await axios.get(\n    `/movie/${movieId}/reviews?api_key=${api_key}`\n  );\n  return response.data;\n};\n"],"names":["Card","styled","_templateObject","_taggedTemplateLiteral","_ref","theme","spacing","Text","_templateObject2","_ref2","Wrap","_templateObject3","CastMember","_ref$one","one","character","name","profile_path","_jsxs","children","_jsx","src","concat","alt","CastCard","List","Title","colors","grey","Cast","movieId","useParams","_useState","useState","_useState2","_slicedToArray","isLoading","setIsLoading","_useState3","_useState4","error","setError","_useState5","_useState6","cast","setCast","useEffect","fetchDetails","_asyncToGenerator","_regeneratorRuntime","_callee","details","_context","prev","next","searchMovieCast","Number","sent","t0","finish","stop","apply","arguments","length","_Fragment","map","member","credit_id","Loader","message","api_key","axios","getTrendingFilms","response","abrupt","data","getMovieDetails","_callee2","_context2","_x","searchMovies","_ref3","_callee3","query","_context3","_x2","_ref4","_callee4","_context4","_x3","searchMovieReviews","_ref5","_callee5","_context5","_x4"],"sourceRoot":""}