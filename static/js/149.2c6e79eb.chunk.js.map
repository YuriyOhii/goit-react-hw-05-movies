{"version":3,"file":"static/js/149.2c6e79eb.chunk.js","mappings":"+NACaA,EAAQ,SAAHC,GAAiC,IAADC,EAAAD,EAA1BE,KAAQC,EAAKF,EAALE,MAAOC,EAAEH,EAAFG,GACrC,OACEC,EAAAA,EAAAA,KAAA,OAAAC,UACED,EAAAA,EAAAA,KAACE,EAAAA,GAAI,CAACC,GAAE,WAAAC,OAAaL,GAAKE,SAAEH,KAGlC,E,kBCFaO,EAAY,WAAO,IAADC,EAC7BC,GAAkCC,EAAAA,EAAAA,WAAS,GAAMC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA1CI,EAASF,EAAA,GAAEG,EAAYH,EAAA,GAC9BI,GAA0BL,EAAAA,EAAAA,UAAS,MAAKM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAAjCE,EAAKD,EAAA,GAAEE,EAAQF,EAAA,GACtBG,GAAiBC,EAAAA,EAAAA,MAAVC,GAA2BT,EAAAA,EAAAA,GAAAO,EAAA,GAArB,GACbG,GAA4BZ,EAAAA,EAAAA,UAAS,IAAGa,GAAAX,EAAAA,EAAAA,GAAAU,EAAA,GAAjCE,EAAMD,EAAA,GAAEE,EAASF,EAAA,GAClBG,EAA2B,QAAtBlB,EAAGa,EAAOM,IAAI,gBAAQ,IAAAnB,EAAAA,EAAI,GAiCrC,OA/BAoB,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAU,eAAAhC,GAAAiC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,IAAA,IAAAC,EAAA,OAAAF,IAAAA,MAAA,SAAAG,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAGA,OAHAF,EAAAC,KAAA,EAEfrB,GAAa,GACbI,EAAS,MAAMgB,EAAAE,KAAA,GACKC,EAAAA,EAAAA,MAAmB,KAAD,EAAhCJ,EAAKC,EAAAI,KACXC,QAAQC,IAAIP,GACZR,EAAUQ,EAAMQ,SAASP,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAQ,GAAAR,EAAA,SAEzBhB,EAAQgB,EAAAQ,IAAQ,QAEI,OAFJR,EAAAC,KAAA,GAEhBrB,GAAa,GAAOoB,EAAAS,OAAA,6BAAAT,EAAAU,OAAA,GAAAZ,EAAA,yBAEvB,kBAZe,OAAAnC,EAAAgD,MAAA,KAAAC,UAAA,KAcVC,EAAW,eAAAC,GAAAlB,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAkB,IAAA,IAAAhB,EAAA,OAAAF,IAAAA,MAAA,SAAAmB,GAAA,cAAAA,EAAAf,KAAAe,EAAAd,MAAA,OAGD,OAHCc,EAAAf,KAAA,EAEhBrB,GAAa,GACbI,EAAS,MAAMgC,EAAAd,KAAA,GACKe,EAAAA,EAAAA,IAAazB,GAAO,KAAD,EAAjCO,EAAKiB,EAAAZ,KACXC,QAAQC,IAAIP,GACZR,EAAUQ,EAAMQ,SAASS,EAAAd,KAAA,iBAAAc,EAAAf,KAAA,GAAAe,EAAAR,GAAAQ,EAAA,SAEzBhC,EAAQgC,EAAAR,IAAQ,QAEI,OAFJQ,EAAAf,KAAA,GAEhBrB,GAAa,GAAOoC,EAAAP,OAAA,6BAAAO,EAAAN,OAAA,GAAAK,EAAA,yBAEvB,kBAZgB,OAAAD,EAAAH,MAAA,KAAAC,UAAA,KAaH,KAAVpB,EAAcG,IACbkB,GACP,GAAG,CAACrB,KAEF0B,EAAAA,EAAAA,MAAA,WAAAjD,SAAA,EACED,EAAAA,EAAAA,KAAA,MAAAC,SACGqB,EAAO6B,KAAI,SAAAC,GAAE,OACZpD,EAAAA,EAAAA,KAAA,MAAAC,UACED,EAAAA,EAAAA,KAACN,EAAK,CAACG,KAAMuD,KADNA,EAAGrD,GAEP,MAGRY,IAAaX,EAAAA,EAAAA,KAAA,OAAAC,SAAK,eAClBc,IACCmC,EAAAA,EAAAA,MAAA,OAAAjD,SAAA,CAAK,0BACqBc,EAAMsC,QAAQ,kCAKhD,C,2GCzDaC,EAAa,SAAH3D,GAAoB,IAAf4D,EAAQ5D,EAAR4D,SASxB,OACIL,EAAAA,EAAAA,MAAA,QAAMK,SARO,SAAAC,GACjBA,EAAEC,iBACF,IAAMjC,EAAQgC,EAAEE,OAAOC,SAASnC,MAAMoC,MACtCL,EAAS/B,GACVgC,EAAEE,OAAOG,OACZ,EAGqC5D,SAAA,EACzBD,EAAAA,EAAAA,KAAA,SAAO8D,KAAK,OAAOC,KAAK,WACxB/D,EAAAA,EAAAA,KAAA,UAAQ8D,KAAK,SAAQ7D,UAACD,EAAAA,EAAAA,KAACgE,EAAAA,IAAe,QAGlD,E,QCde,SAASC,IACtB,IAAAhD,GAA4BC,EAAAA,EAAAA,MAAiBgD,GAAAxD,EAAAA,EAAAA,GAAAO,EAAA,GAAtCE,EAAM+C,EAAA,GAAEC,EAASD,EAAA,GAUtB,OACAhB,EAAAA,EAAAA,MAAA,QAAAjD,SAAA,EACED,EAAAA,EAAAA,KAACsD,EAAU,CAACC,SAVC,SAAAK,GACf,IAAMQ,EAAkBR,EAAMS,cAAcC,OAC5CnD,EAAOoD,IAAI,QAASH,GACpBD,EAAUhD,EACZ,KAOInB,EAAAA,EAAAA,KAACK,EAAAA,EAAS,MAGhB,C,+ICpBMmE,EAAU,mCAChBC,EAAAA,EAAAA,SAAAA,QAAyB,+BAElB,IAAMtC,EAAgB,eAAAxC,GAAAiC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,IAAA,IAAA4C,EAAA,OAAA7C,IAAAA,MAAA,SAAAG,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACPuC,EAAAA,EAAAA,IAAU,+BAADrE,OAAgCoE,IAAW,KAAD,EAA5D,OAARE,EAAQ1C,EAAAI,KAAAJ,EAAA2C,OAAA,SACPD,EAASE,MAAI,wBAAA5C,EAAAU,OAAA,GAAAZ,EAAA,KACrB,kBAH4B,OAAAnC,EAAAgD,MAAA,KAAAC,UAAA,KAKhBiC,EAAc,eAAA/B,GAAAlB,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAkB,EAAM+B,GAAO,IAAAJ,EAAA,OAAA7C,IAAAA,MAAA,SAAAmB,GAAA,cAAAA,EAAAf,KAAAe,EAAAd,MAAA,cAAAc,EAAAd,KAAA,EAClBuC,EAAAA,EAAAA,IAAU,UAADrE,OAAW0E,EAAO,aAAA1E,OAAYoE,IAAW,KAAD,EAA1D,OAARE,EAAQ1B,EAAAZ,KAAAY,EAAA2B,OAAA,SACPD,EAASE,MAAI,wBAAA5B,EAAAN,OAAA,GAAAK,EAAA,KACrB,gBAH0BgC,GAAA,OAAAjC,EAAAH,MAAA,KAAAC,UAAA,KAKdK,EAAY,eAAA+B,GAAApD,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAoD,EAAMzD,GAAK,IAAAkD,EAAA,OAAA7C,IAAAA,MAAA,SAAAqD,GAAA,cAAAA,EAAAjD,KAAAiD,EAAAhD,MAAA,cAAAgD,EAAAhD,KAAA,EACduC,EAAAA,EAAAA,IAAU,uBAADrE,OAAwBoB,EAAK,aAAApB,OAAYoE,IAAW,KAAD,EAArE,OAARE,EAAQQ,EAAA9C,KAAA8C,EAAAP,OAAA,SACPD,EAASE,MAAI,wBAAAM,EAAAxC,OAAA,GAAAuC,EAAA,KACrB,gBAHwBE,GAAA,OAAAH,EAAArC,MAAA,KAAAC,UAAA,I","sources":["components/Movie/Movie.jsx","components/MovieList/MovieList.jsx","components/SearchForm/SearchForm.jsx","pages/Movies.jsx","services/api.js"],"sourcesContent":["import { Link } from 'react-router-dom';\nexport const Movie = ({ film: { title, id } }) => {\n  return (\n    <div>\n      <Link to={`/movies/${id}`}>{title}</Link>\n    </div>\n  );\n};\n","import { useSearchParams } from 'react-router-dom';\nimport { Movie } from '../Movie/Movie';\nimport { useEffect, useState } from 'react';\nimport { searchMovies, getTrendingFilms } from '../../services/api';\n\nexport const MovieList = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [params] = useSearchParams();\n  const [movies, setMovies] = useState([]);\n  const query = params.get('query') ?? '';\n\n  useEffect(() => {\n    const fetchFilms = async () => {\n      try {\n        setIsLoading(true);\n        setError(null);\n        const films = await getTrendingFilms();\n        console.log(films);\n        setMovies(films.results);\n      } catch (error) {\n        setError(error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    const searchFilms = async () => {\n      try {\n        setIsLoading(true);\n        setError(null);\n        const films = await searchMovies(query);\n        console.log(films);\n        setMovies(films.results);\n      } catch (error) {\n        setError(error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    if (query === '') fetchFilms();\n    else searchFilms();\n  }, [query]);\n  return (\n    <section>\n      <ul>\n        {movies.map(el => (\n          <li key={el.id}>\n            <Movie film={el} />\n          </li>\n        ))}\n      </ul>\n      {isLoading && <div>LOADING...</div>}\n      {error && (\n        <div>\n          Something went wrong.. {error.message}. Please, reload the page!\n        </div>\n      )}\n    </section>\n  );\n};\n","import PropTypes from 'prop-types'\n\nimport { HiOutlineSearch } from 'react-icons/hi'\nexport const SearchForm = ({onSubmit}) => {\n\nconst handleSubmit = e => {\n    e.preventDefault();\n    const query = e.target.elements.query.value;\n    onSubmit(query);\n   e.target.reset();\n}\n\n    return (\n        <form onSubmit={handleSubmit}>\n            <input type=\"text\" name=\"query\" />\n            <button type=\"submit\"><HiOutlineSearch/></button>\n        </form>\n    )\n};\n\nSearchForm.propTypes = {\n    onSubmit: PropTypes.func.isRequired,\n}","import { MovieList } from 'components/MovieList/MovieList';\nimport { SearchForm } from 'components/SearchForm/SearchForm';\nimport { useSearchParams } from 'react-router-dom';\n\nexport default function Movies() {\n  const [params, setParams] = useSearchParams();\n  \n  const getQuery = value => {\n    const normalizedQuery = value.toLowerCase().trim();\n    params.set('query', normalizedQuery);\n    setParams(params);\n  };\n\n  \n\n    return (\n    <main>\n      <SearchForm onSubmit={getQuery} />\n      <MovieList/>\n    </main>\n  );\n}\n","import axios from 'axios';\nconst api_key = 'f6d968bc9808c07e077eb94ac6b79371';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport const getTrendingFilms = async () => {\n  const response = await axios.get(`/trending/movie/day?api_key=${api_key}`);\n  return response.data;\n};\n\nexport const getFilmDetails = async movieId => {\n  const response = await axios.get(`/movie/${movieId}?api_key=${api_key}`);\n  return response.data;\n};\n\nexport const searchMovies = async query => {\n  const response = await axios.get(`/search/movie?query=${query}&api_key=${api_key}`);\n  return response.data;\n};\n"],"names":["Movie","_ref","_ref$film","film","title","id","_jsx","children","Link","to","concat","MovieList","_params$get","_useState","useState","_useState2","_slicedToArray","isLoading","setIsLoading","_useState3","_useState4","error","setError","_useSearchParams","useSearchParams","params","_useState5","_useState6","movies","setMovies","query","get","useEffect","fetchFilms","_asyncToGenerator","_regeneratorRuntime","_callee","films","_context","prev","next","getTrendingFilms","sent","console","log","results","t0","finish","stop","apply","arguments","searchFilms","_ref2","_callee2","_context2","searchMovies","_jsxs","map","el","message","SearchForm","onSubmit","e","preventDefault","target","elements","value","reset","type","name","HiOutlineSearch","Movies","_useSearchParams2","setParams","normalizedQuery","toLowerCase","trim","set","api_key","axios","response","abrupt","data","getFilmDetails","movieId","_x","_ref3","_callee3","_context3","_x2"],"sourceRoot":""}