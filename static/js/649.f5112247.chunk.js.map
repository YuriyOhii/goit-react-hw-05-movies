{"version":3,"file":"static/js/649.f5112247.chunk.js","mappings":"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","sources":["components/CastMember/CastMember.jsx","components/Cast/Cast.jsx","services/api.js"],"sourcesContent":["import PropTypes from 'prop-types';\n\nexport const CastMember = ({ one: { character, name, profile_path, job } }) => {\n  const defaultImg = 'https://via.placeholder.com/200x300';\n  return (\n    <div>\n      <img\n        src={\n          profile_path\n            ? `https://image.tmdb.org/t/p/w200${profile_path}`\n            : defaultImg\n        }\n        alt=\"Cast member poster. If we have it :)\"\n      />\n      <p>{character ?? job}</p>\n      <p>{name}</p>\n    </div>\n  );\n};\n\nCastMember.propTypes = {\n  one: PropTypes.shape({\n    character: PropTypes.string,\n    name: PropTypes.string.isRequired,\n    profile_path: PropTypes.string,\n    job: PropTypes.string,\n  }),\n};\n","import { CastMember } from 'components/CastMember/CastMember';\nimport { searchMovieCast } from '../../services/api';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nexport default function Cast() {\n  const { movieId } = useParams();\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [cast, setCast] = useState([]);\n  const [crew, setCrew] = useState([]);\n\n  useEffect(() => {\n    const fetchDetails = async () => {\n      try {\n        setIsLoading(true);\n        setError(null);\n        const details = await searchMovieCast(Number(movieId));\n        setCast(details.cast);\n        setCrew(details.crew);\n      } catch (error) {\n        setError(error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchDetails();\n  }, [movieId]);\n\n  return (\n    <section>\n      <h2>Movie participaters</h2>\n      {cast.length > 0 && (\n        <>\n          <h3>Cast</h3>\n          <ul>\n            {cast.map(member => (\n              <li key={member.credit_id}>\n                <CastMember one={member} />\n              </li>\n            ))}\n          </ul>\n        </>\n      )}\n      {crew.length > 0 && (\n        <>\n          <h3>Crew</h3>\n          <ul>\n            {crew.map(member => (\n              <li key={member.credit_id}>\n                <CastMember one={member} />\n              </li>\n            ))}\n          </ul>\n        </>\n      )}\n      {isLoading && <div>LOADING...</div>}\n      {error && (\n        <div>\n          Something went wrong.. {error.message}. Please, reload the page!\n        </div>\n      )}\n    </section>\n  );\n}\n","import axios from 'axios';\nconst api_key = 'f6d968bc9808c07e077eb94ac6b79371';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport const getTrendingFilms = async () => {\n  const response = await axios.get(`/trending/movie/day?api_key=${api_key}`);\n  return response.data;\n};\n\nexport const getMovieDetails = async movieId => {\n  const response = await axios.get(`/movie/${movieId}?api_key=${api_key}`);\n  return response.data;\n};\n\nexport const searchMovies = async query => {\n  const response = await axios.get(\n    `/search/movie?query=${query}&api_key=${api_key}`\n  );\n  return response.data;\n};\n\nexport const searchMovieCast = async movieId => {\n  const response = await axios.get(\n    `/movie/${movieId}/credits?api_key=${api_key}`\n  );\n  return response.data;\n};\n\nexport const searchMovieReviews = async movieId => {\n  const response = await axios.get(\n    `/movie/${movieId}/reviews?api_key=${api_key}`\n  );\n  return response.data;\n};\n"],"names":["CastMember","_ref","_ref$one","one","character","name","profile_path","job","_jsxs","children","_jsx","src","concat","alt","Cast","movieId","useParams","_useState","useState","_useState2","_slicedToArray","isLoading","setIsLoading","_useState3","_useState4","error","setError","_useState5","_useState6","cast","setCast","_useState7","_useState8","crew","setCrew","useEffect","fetchDetails","_asyncToGenerator","_regeneratorRuntime","_callee","details","_context","prev","next","searchMovieCast","Number","sent","t0","finish","stop","apply","arguments","length","_Fragment","map","member","credit_id","message","api_key","axios","getTrendingFilms","response","abrupt","data","getMovieDetails","_ref2","_callee2","_context2","_x","searchMovies","_ref3","_callee3","query","_context3","_x2","_ref4","_callee4","_context4","_x3","searchMovieReviews","_ref5","_callee5","_context5","_x4"],"sourceRoot":""}