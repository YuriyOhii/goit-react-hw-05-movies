{"version":3,"file":"static/js/849.12daf02f.chunk.js","mappings":"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","sources":["components/Details/Details.styled.js","components/Details/Details.jsx","assets/Backlink.js","components/ExtraInfo/ExtraInfo.styled.js","components/ExtraInfo/ExtraInfo.jsx","pages/MovieDetails.jsx","services/api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Main = styled.main`\n  display: flex;\n  gap: ${({ theme }) => theme.spacing(2)};\n  border-bottom: 2px solid ${({ theme }) => theme.colors.grey};\n`;\n\nexport const Title = styled.h1`\n  text-align: center;\n`;\n\nexport const List = styled.ul`\n  display: flex;\n  gap: ${({ theme }) => theme.spacing(4)};\n  margin: ${({ theme }) => theme.spacing(5)};\n`;\n\nexport const Genre = styled.li`\n  list-style: none;\n  font-size: 26px;\n  color: ${({ theme }) => theme.colors.orange};\n`;\n\nexport const Rating = styled.p`\n  margin-top: ${({ theme }) => theme.spacing(10)};\n  font-size: 24px;\n  color: ${({ theme }) => theme.colors.red};\n  > b {\n    color: black;\n    margin-right: ${({ theme }) => theme.spacing(5)};\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { Genre, List, Main, Rating, Title } from './Details.styled';\n\nexport const Details = ({\n  movie: {\n    title,\n    overview,\n    genres = [],\n    vote_average,\n    vote_count,\n    poster_path,\n  },\n}) => {\n  const defaultImg = 'https://via.placeholder.com/300x450';\n  return (\n    <Main>\n      <div>\n        <img\n          src={\n            poster_path\n              ? `https://image.tmdb.org/t/p/w300${poster_path}`\n              : defaultImg\n          }\n          alt=\"Movie poster\"\n        />\n      </div>\n      <div>\n        <Title>{title}</Title>\n        <p>\n          <b>Overview:</b> {overview}\n        </p>\n        <h3>Genres:</h3>\n        <List>\n          {genres.map(el => (\n            <Genre key={el.id}>{el.name}</Genre>\n          ))}\n        </List>\n        <Rating>\n          <b>Rating: </b>\n          {vote_average}. <b>Total votes: </b>\n          {vote_count}{' '}\n        </Rating>\n      </div>\n    </Main>\n  );\n};\n\nDetails.propTypes = {\n  movie: PropTypes.shape({\n    title: PropTypes.string,\n    overview: PropTypes.string,\n    genres: PropTypes.arrayOf(PropTypes.object),\n    vote_average: PropTypes.number,\n    vote_count: PropTypes.number,\n    poster_path: PropTypes.string,\n  }),\n};\n","import styled from 'styled-components';\nimport { HiOutlineArrowNarrowLeft } from 'react-icons/hi';\nimport { Link } from 'react-router-dom';\n\nexport const BackLink = styled(Link)`\n  display: flex;\n  align-items: center;\n  gap: ${({ theme }) => theme.spacing(1)};\n  margin: ${({ theme }) => theme.spacing(1)};\n  padding: ${({ theme }) => theme.spacing(1)};\n  color: ${({ theme }) => theme.colors.grey};\n  font-size: 20px;\n  text-decoration: none;\n  transition: color 300ms;\n  &:hover {\n    color: ${({ theme }) => theme.colors.red};\n  }\n`;\n\nexport const Icon = styled(HiOutlineArrowNarrowLeft)`\n  color: inherit;\n`;\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  display: flex;\n  gap: ${({ theme }) => theme.spacing(10)};\n  justify-content: center;\n  margin: ${({ theme }) => theme.spacing(5)} 0;\n  a {\n    text-decoration: none;\n    color: ${({ theme }) => theme.colors.grey};\n  }\n  > li {\n    list-style: none;\n    font-size: 24px;\n  }\n`;\n","import { Link, useParams } from 'react-router-dom';\nimport { List } from './ExtraInfo.styled';\n\nexport const ExtraInfo = () => {\n  const { movieId } = useParams();\n  return (\n    <section>\n      <List>\n        <li>\n          <Link to={`/movies/${movieId}/cast`}>Cast</Link>\n        </li>\n        <li>\n          <Link to={`/movies/${movieId}/reviews`}>Reviews</Link>\n        </li>\n      </List>\n    </section>\n  );\n};\n","import { Suspense, useEffect, useState } from 'react';\nimport { Outlet, useLocation, useParams } from 'react-router-dom';\nimport { getMovieDetails } from '../services/api';\nimport { Details } from '../components/Details/Details';\nimport { BackLink, Icon } from 'assets/Backlink';\nimport { ExtraInfo } from 'components/ExtraInfo/ExtraInfo';\nimport { Loader } from 'components/Loader/Loader';\nexport default function MovieDetails() {\n  const [details, setDetails] = useState({});\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const { movieId } = useParams();\n  const location = useLocation();\n  const backLink = location.state?.from ?? '/';\n\n  useEffect(() => {\n    const fetchDetails = async () => {\n      try {\n        setIsLoading(true);\n        setError(null);\n        const details = await getMovieDetails(Number(movieId));\n        setDetails(details);\n      } catch (error) {\n        setError(error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchDetails();\n  }, [movieId]);\n  return (\n    <main>\n      <BackLink to={backLink}>\n        <Icon />\n        Back to the filmlist\n      </BackLink>\n      {details && <Details movie={details} />}\n      {isLoading && <Loader />}\n      {error && (\n        <div>\n          Something went wrong.. {error.message}. Please, reload the page!\n        </div>\n      )}\n      <ExtraInfo />\n      <Suspense fallback={<div>LOADING...</div>}>\n        <Outlet />\n      </Suspense>\n    </main>\n  );\n}\n","import axios from 'axios';\nconst api_key = 'f6d968bc9808c07e077eb94ac6b79371';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport const getTrendingFilms = async () => {\n  const response = await axios.get(`/trending/movie/day?api_key=${api_key}`);\n  return response.data;\n};\n\nexport const getMovieDetails = async movieId => {\n  const response = await axios.get(`/movie/${movieId}?api_key=${api_key}`);\n  return response.data;\n};\n\nexport const searchMovies = async query => {\n  const response = await axios.get(\n    `/search/movie?query=${query}&api_key=${api_key}`\n  );\n  return response.data;\n};\n\nexport const searchMovieCast = async movieId => {\n  const response = await axios.get(\n    `/movie/${movieId}/credits?api_key=${api_key}`\n  );\n  return response.data;\n};\n\nexport const searchMovieReviews = async movieId => {\n  const response = await axios.get(\n    `/movie/${movieId}/reviews?api_key=${api_key}`\n  );\n  return response.data;\n};\n"],"names":["Main","styled","_templateObject","_taggedTemplateLiteral","_ref","theme","spacing","_ref2","colors","grey","Title","_templateObject2","List","_templateObject3","_ref3","_ref4","Genre","_templateObject4","_ref5","orange","Rating","_templateObject5","_ref6","_ref7","red","_ref8","Details","_ref$movie","movie","title","overview","_ref$movie$genres","genres","vote_average","vote_count","poster_path","_jsxs","children","_jsx","src","concat","alt","map","el","name","id","BackLink","Link","Icon","HiOutlineArrowNarrowLeft","ExtraInfo","movieId","useParams","to","MovieDetails","_location$state$from","_location$state","_useState","useState","_useState2","_slicedToArray","details","setDetails","_useState3","_useState4","isLoading","setIsLoading","_useState5","_useState6","error","setError","backLink","useLocation","state","from","useEffect","fetchDetails","_asyncToGenerator","_regeneratorRuntime","_callee","_details","_context","prev","next","getMovieDetails","Number","sent","t0","finish","stop","apply","arguments","Loader","message","Suspense","fallback","Outlet","api_key","axios","getTrendingFilms","response","abrupt","data","_callee2","_context2","_x","searchMovies","_callee3","query","_context3","_x2","searchMovieCast","_callee4","_context4","_x3","searchMovieReviews","_callee5","_context5","_x4"],"sourceRoot":""}