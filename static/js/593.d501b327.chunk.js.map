{"version":3,"file":"static/js/593.d501b327.chunk.js","mappings":"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","sources":["components/Movie/Movie.styled.js","components/Movie/Movie.jsx","components/MovieList/MovieList.styled.js","components/MovieList/MovieList.jsx","components/SearchForm/SearchForm.styled.js","components/SearchForm/SearchForm.jsx","pages/Movies.jsx","services/api.js"],"sourcesContent":["import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const Card = styled.div`\n  border-radius: 2px;\n  overflow: hidden;\n  padding-top: ${({ theme }) => theme.spacing(4)};\n`;\n\nexport const Title = styled.p`\n  text-align: center;\n  font-size: 20px;\n  padding: ${({ theme }) => theme.spacing(1)};\n  transition: font-size 300ms;\n`;\n\nexport const Reference = styled(Link)`\n  text-decoration: none;\n  color: ${({ theme }) => theme.colors.grey};\n  transition: color 300ms;\n  &:hover,\n  &:focus {\n    color: ${({ theme }) => theme.colors.red};\n  }\n`;\n\nexport const Wrap = styled.div`\n  text-align: center;\n  transition: transform 300ms;\n  &:hover,\n  &:focus {\n    transform: scale(1.02);\n  }\n`;\n","import { useLocation } from 'react-router-dom';\nimport { Card, Reference, Title, Wrap } from './Movie.styled';\nimport PropTypes from 'prop-types';\n\nexport const Movie = ({ film: { title, id, poster_path } }) => {\n  const location = useLocation();\n  const defaultImg = 'https://via.placeholder.com/200x300';\n\n  return (\n    <div>\n      <Reference to={`/movies/${id}`} state={{ from: location }}>\n        <Card>\n          <Wrap>\n            <img\n              src={\n                poster_path\n                  ? `https://image.tmdb.org/t/p/w200${poster_path}`\n                  : defaultImg\n              }\n              alt=\"Movie poster\"\n            />\n          </Wrap>\n          <Title>{title}</Title>\n        </Card>\n      </Reference>\n    </div>\n  );\n};\n\nMovie.propTypes = {\n  film: PropTypes.shape({\n    title: PropTypes.string.isRequired,\n    id: PropTypes.number.isRequired,\n    poster_path: PropTypes.string.isRequired,\n  }),\n};\n","import styled from 'styled-components';\n\nexport const Query = styled.span`\n  text-transform: capitalize;\n  color: ${({ theme }) => theme.colors.red};\n  font-size: 24px;\n`;\n\nexport const MovieItem = styled.li`\n  list-style: none;\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\n`;\n\nexport const List = styled.ul`\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(220px, 1fr));\n  grid-gap: ${({ theme }) => theme.spacing(2)};\n`;\n\nexport const Title = styled.h1`\n  text-align: center;\n  font-size: 30px;\n`;\n","import { useLocation, useSearchParams } from 'react-router-dom';\nimport { Movie } from '../Movie/Movie';\nimport { useEffect, useState } from 'react';\nimport { searchMovies, getTrendingFilms } from '../../services/api';\nimport { List, MovieItem, Query, Title } from './MovieList.styled';\n\nexport const MovieList = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [params] = useSearchParams();\n  const [movies, setMovies] = useState([]);\n  const query = params.get('query') ?? '';\n  const location = useLocation();\n\n  useEffect(() => {\n    const fetchFilmList = async () => {\n      try {\n        if (query === '' && location.pathname !== '/') return;\n        let films = [];\n        setIsLoading(true);\n        setError(null);\n        if (location.pathname === '/') {\n          films = await getTrendingFilms();\n        } else {\n          films = await searchMovies(query);\n        }\n        setMovies(films.results);\n      } catch (error) {\n        setError(error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchFilmList();\n  }, [query, location]);\n  return (\n    <section>\n      {movies.length > 0 ? (\n        location.pathname === '/' ? (\n          <Title>The most trending films of the day!</Title>\n        ) : (\n          <Title>\n            Here we are! Films for your request: <Query>{query}</Query>\n          </Title>\n        )\n      ) : null}\n      <List>\n        {movies.map(el => (\n          <MovieItem key={el.id}>\n            <Movie film={el} />\n          </MovieItem>\n        ))}\n      </List>\n      {isLoading && <div>LOADING...</div>}\n      {error && (\n        <div>\n          Something went wrong.. {error.message}. Please, reload the page!\n        </div>\n      )}\n    </section>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Form = styled.form`\n  margin-top: ${({ theme }) => theme.spacing(3)};\n`;\n","import { useSearchParams } from 'react-router-dom';\n\nimport { HiOutlineSearch } from 'react-icons/hi';\nimport { Form } from './SearchForm.styled';\nexport const SearchForm = () => {\n  const [params, setParams] = useSearchParams();\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const query = e.target.elements.query.value;\n    const normalizedQuery = query.toLowerCase().trim();\n    params.set('query', normalizedQuery);\n    setParams(params);\n    e.target.reset();\n  };\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <input type=\"text\" name=\"query\" />\n      <button type=\"submit\">\n        <HiOutlineSearch />\n      </button>\n    </Form>\n  );\n};\n","import { MovieList } from 'components/MovieList/MovieList';\nimport { SearchForm } from 'components/SearchForm/SearchForm';\n\nexport default function Movies() {\n  return (\n    <main>\n      <SearchForm />\n      <MovieList />\n    </main>\n  );\n}\n","import axios from 'axios';\nconst api_key = 'f6d968bc9808c07e077eb94ac6b79371';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport const getTrendingFilms = async () => {\n  const response = await axios.get(`/trending/movie/day?api_key=${api_key}`);\n  return response.data;\n};\n\nexport const getMovieDetails = async movieId => {\n  const response = await axios.get(`/movie/${movieId}?api_key=${api_key}`);\n  return response.data;\n};\n\nexport const searchMovies = async query => {\n  const response = await axios.get(\n    `/search/movie?query=${query}&api_key=${api_key}`\n  );\n  return response.data;\n};\n\nexport const searchMovieCast = async movieId => {\n  const response = await axios.get(\n    `/movie/${movieId}/credits?api_key=${api_key}`\n  );\n  return response.data;\n};\n\nexport const searchMovieReviews = async movieId => {\n  const response = await axios.get(\n    `/movie/${movieId}/reviews?api_key=${api_key}`\n  );\n  return response.data;\n};\n"],"names":["Card","styled","_templateObject","_taggedTemplateLiteral","_ref","theme","spacing","Title","_templateObject2","_ref2","Reference","Link","_templateObject3","_ref3","colors","grey","_ref4","red","Wrap","_templateObject4","Movie","_ref$film","film","title","id","poster_path","location","useLocation","_jsx","children","to","concat","state","from","_jsxs","src","alt","Query","MovieItem","List","MovieList","_params$get","_useState","useState","_useState2","_slicedToArray","isLoading","setIsLoading","_useState3","_useState4","error","setError","_useSearchParams","useSearchParams","params","_useState5","_useState6","movies","setMovies","query","get","useEffect","fetchFilmList","_asyncToGenerator","_regeneratorRuntime","_callee","films","_context","prev","next","pathname","abrupt","getTrendingFilms","sent","searchMovies","results","t0","finish","stop","apply","arguments","length","map","el","message","Form","SearchForm","_useSearchParams2","setParams","onSubmit","e","preventDefault","normalizedQuery","target","elements","value","toLowerCase","trim","set","reset","type","name","HiOutlineSearch","Movies","api_key","axios","response","data","getMovieDetails","_callee2","movieId","_context2","_x","_callee3","_context3","_x2","searchMovieCast","_callee4","_context4","_x3","searchMovieReviews","_ref5","_callee5","_context5","_x4"],"sourceRoot":""}