{"version":3,"file":"static/js/713.0973d376.chunk.js","mappings":"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","sources":["components/Movie/Movie.styled.js","components/Movie/Movie.jsx","components/MovieList/MovieList.styled.js","components/MovieList/MovieList.jsx","pages/Homepage.jsx","services/api.js"],"sourcesContent":["import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const Card = styled.div`\n  border-radius: 2px;\n  overflow: hidden;\n  padding-top: ${({ theme }) => theme.spacing(4)};\n`;\n\nexport const Title = styled.p`\n  text-align: center;\n  font-size: 20px;\n  padding: ${({ theme }) => theme.spacing(1)};\n  transition: font-size 300ms;\n`;\n\nexport const Reference = styled(Link)`\n  text-decoration: none;\n  color: ${({ theme }) => theme.colors.grey};\n  transition: color 300ms;\n  &:hover,\n  &:focus {\n    color: ${({ theme }) => theme.colors.red};\n  }\n`;\n\nexport const Wrap = styled.div`\n  text-align: center;\n  transition: transform 300ms;\n  &:hover,\n  &:focus {\n    transform: scale(1.02);\n  }\n`;\n","import { useLocation } from 'react-router-dom';\nimport { Card, Reference, Title, Wrap } from './Movie.styled';\nimport PropTypes from 'prop-types';\n\nexport const Movie = ({ film: { title, id, poster_path } }) => {\n  const location = useLocation();\n  const defaultImg = 'https://via.placeholder.com/200x300';\n\n  return (\n    <div>\n      <Reference to={`/movies/${id}`} state={{ from: location }}>\n        <Card>\n          <Wrap>\n            <img\n              src={\n                poster_path\n                  ? `https://image.tmdb.org/t/p/w200${poster_path}`\n                  : defaultImg\n              }\n              alt=\"Movie poster\"\n            />\n          </Wrap>\n          <Title>{title}</Title>\n        </Card>\n      </Reference>\n    </div>\n  );\n};\n\nMovie.propTypes = {\n  film: PropTypes.shape({\n    title: PropTypes.string.isRequired,\n    id: PropTypes.number.isRequired,\n    poster_path: PropTypes.string,\n  }),\n};\n","import styled from 'styled-components';\n\nexport const Query = styled.span`\n  text-transform: capitalize;\n  color: ${({ theme }) => theme.colors.red};\n  font-size: 24px;\n`;\n\nexport const MovieItem = styled.li`\n  list-style: none;\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\n`;\n\nexport const List = styled.ul`\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(220px, 1fr));\n  grid-gap: ${({ theme }) => theme.spacing(2)};\n`;\n\nexport const Title = styled.h1`\n  text-align: center;\n  font-size: 30px;\n`;\n","import { useLocation, useSearchParams } from 'react-router-dom';\nimport { Movie } from '../Movie/Movie';\nimport { List, MovieItem, Query, Title } from './MovieList.styled';\nexport const MovieList = ({ movies }) => {\n  const [params] = useSearchParams();\n  const query = params.get('query') ?? '';\n  const location = useLocation();\n  return (\n    <section>\n      {movies.length > 0 ? (\n        location.pathname === '/' ? (\n          <Title>The most trending films of the day!</Title>\n        ) : (\n          <Title>\n            Here we are! Films for your request: <Query>{query}</Query>\n          </Title>\n        )\n      ) : null}\n      <List>\n        {movies.map(el => (\n          <MovieItem key={el.id}>\n            <Movie film={el} />\n          </MovieItem>\n        ))}\n      </List>\n    </section>\n  );\n};\n","import { useState, useEffect } from 'react';\nimport { Loader } from '../components/Loader/Loader';\nimport { MovieList } from 'components/MovieList/MovieList';\nimport { getTrendingFilms } from '../services/api';\n\nexport default function Homepage() {\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [movies, setMovies] = useState([]);\n\n  useEffect(() => {\n    const fetchFilmList = async () => {\n      try {\n        setIsLoading(true);\n        setError(null);\n        const films = await getTrendingFilms();\n        setMovies(films.results);\n      } catch (error) {\n        setError(error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchFilmList();\n  }, []);\n\n  return (\n    <main>\n      <MovieList movies={movies} />\n      {isLoading && <Loader />}\n      {error && (\n        <div>\n          Something went wrong.. {error.message}. Please, reload the page!\n        </div>\n      )}\n    </main>\n  );\n}\n","import axios from 'axios';\nconst api_key = 'f6d968bc9808c07e077eb94ac6b79371';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport const getTrendingFilms = async () => {\n  const response = await axios.get(`/trending/movie/day?api_key=${api_key}`);\n  return response.data;\n};\n\nexport const getMovieDetails = async movieId => {\n  const response = await axios.get(`/movie/${movieId}?api_key=${api_key}`);\n  return response.data;\n};\n\nexport const searchMovies = async query => {\n  const response = await axios.get(\n    `/search/movie?query=${query}&api_key=${api_key}`\n  );\n  return response.data;\n};\n\nexport const searchMovieCast = async movieId => {\n  const response = await axios.get(\n    `/movie/${movieId}/credits?api_key=${api_key}`\n  );\n  return response.data;\n};\n\nexport const searchMovieReviews = async movieId => {\n  const response = await axios.get(\n    `/movie/${movieId}/reviews?api_key=${api_key}`\n  );\n  return response.data;\n};\n"],"names":["Card","styled","_templateObject","_taggedTemplateLiteral","_ref","theme","spacing","Title","_templateObject2","_ref2","Reference","Link","_templateObject3","_ref3","colors","grey","_ref4","red","Wrap","_templateObject4","Movie","_ref$film","film","title","id","poster_path","location","useLocation","_jsx","children","to","concat","state","from","_jsxs","src","alt","Query","MovieItem","List","MovieList","_params$get","movies","_useSearchParams","useSearchParams","query","_slicedToArray","get","length","pathname","map","el","Homepage","_useState","useState","_useState2","isLoading","setIsLoading","_useState3","_useState4","error","setError","_useState5","_useState6","setMovies","useEffect","fetchFilmList","_asyncToGenerator","_regeneratorRuntime","_callee","films","_context","prev","next","getTrendingFilms","sent","results","t0","finish","stop","apply","arguments","Loader","message","api_key","axios","response","abrupt","data","getMovieDetails","_callee2","movieId","_context2","_x","searchMovies","_callee3","_context3","_x2","searchMovieCast","_callee4","_context4","_x3","searchMovieReviews","_ref5","_callee5","_context5","_x4"],"sourceRoot":""}